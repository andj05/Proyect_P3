@model Proyect_P3.Models.ViewModels.AddUserViewModels
@{
    ViewBag.Title = "Agregar";
    Layout = "~/views/shared/_LayoutApp.cshtml";
}

<style>
    /* Reset completo para eliminar cualquier línea o borde */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        border: none; /* Elimina todos los bordes por defecto */
        outline: none; /* Elimina outlines por defecto */
    }

        *:before,
        *:after {
            box-sizing: border-box;
            border: none;
        }

    /* Reset específico para html y body */
    html, body {
        margin: 0;
        padding: 0;
        height: 100%;
        overflow-x: hidden;
        border: none; /* Asegura que no hay bordes */
        outline: none;
        background: transparent; /* Elimina cualquier background por defecto */
        font-family: 'Segoe UI', 'Roboto', Arial, sans-serif;
    }

    .modern-form-container {
        background: url('/Content/Images/Login.jpg') no-repeat center center fixed;
        background-size: cover;
        min-height: 100vh;
        width: 100vw;
        position: fixed;
        top: 0;
        left: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        box-sizing: border-box;
        border: none; /* Elimina cualquier borde del contenedor */
    }

    /* Overlay para mejorar la legibilidad */
    .modern-form-container::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(35, 37, 38, 0.45);
        z-index: 0;
        pointer-events: none;
    }

    .form-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 24px;
        padding: 40px;
        width: 100%;
        max-width: 480px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15), 0 8px 16px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2); /* Solo este borde está permitido */
        transform: translateY(0);
        transition: all 0.3s ease;
        position: relative;
        z-index: 10;
    }

        .form-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2), 0 10px 20px rgba(0, 0, 0, 0.12);
        }

    .modern-form-header {
        text-align: center;
        margin-bottom: 32px;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 16px;
    }

    .user-icon {
        width: 32px;
        height: 32px;
        fill: #667eea;
    }

    .modern-form-title {
        font-size: 28px;
        font-weight: 700;
        color: #1a1a1a;
        margin-bottom: 8px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .modern-form-subtitle {
        color: #666;
        font-size: 16px;
        font-weight: 400;
    }

    .modern-form-group {
        margin-bottom: 24px;
        position: relative;
    }

    .modern-form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #374151;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .modern-form-input {
        width: 100%;
        padding: 16px 20px;
        border: 2px solid #e5e7eb; /* Solo este borde está permitido */
        border-radius: 12px;
        font-size: 16px;
        background: #fff;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        outline: none;
        font-family: inherit;
        box-sizing: border-box;
    }

        .modern-form-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: translateY(-1px);
        }

        .modern-form-input:valid {
            border-color: #10b981;
        }

        .modern-form-input::placeholder {
            color: #9ca3af;
            font-weight: 400;
        }

    .password-container {
        position: relative;
    }

    .password-toggle {
        position: absolute;
        right: 16px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none; /* Sin borde */
        cursor: pointer;
        color: #6b7280;
        padding: 4px;
        border-radius: 4px;
        transition: color 0.2s ease;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .password-toggle:hover {
            color: #374151;
            background-color: rgba(0, 0, 0, 0.05);
        }

        .password-toggle svg {
            width: 18px;
            height: 18px;
            fill: currentColor;
        }

    .modern-form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 16px;
    }

    .name-age-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 16px;
    }

    .buttons-container {
        display: flex;
        gap: 16px;
        margin-top: 24px;
    }

    .modern-submit-btn {
        flex: 1;
        padding: 16px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none; /* Sin borde */
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

        .modern-submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 24px rgba(102, 126, 234, 0.4);
        }

        .modern-submit-btn:active {
            transform: translateY(-1px);
        }

        .modern-submit-btn svg {
            width: 18px;
            height: 18px;
            fill: white;
        }

    .modern-back-btn {
        flex: 1;
        padding: 16px;
        background: linear-gradient(135deg, #6b7280 0%, #9ca3af 100%);
        color: white;
        border: none; /* Sin borde */
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

        .modern-back-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 24px rgba(107, 114, 128, 0.4);
        }

        .modern-back-btn svg {
            width: 16px;
            height: 16px;
            fill: white;
        }

    .text-danger {
        color: #ef4444;
        font-size: 12px;
        margin-top: 4px;
        display: block;
        font-weight: 500;
    }

    .password-strength {
        margin-top: 8px;
        font-size: 12px;
        color: #6b7280;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .strength-bar {
        flex: 1;
        height: 4px;
        background: #e5e7eb;
        border-radius: 2px;
        overflow: hidden;
    }

    .strength-fill {
        height: 100%;
        width: 0%;
        transition: all 0.3s ease;
        border-radius: 2px;
    }

    .strength-weak {
        width: 25%;
        background: #ef4444;
    }

    .strength-fair {
        width: 50%;
        background: #f59e0b;
    }

    .strength-good {
        width: 75%;
        background: #10b981;
    }

    .strength-strong {
        width: 100%;
        background: #059669;
    }

    /* Elementos flotantes de fondo - ahora más sutiles para complementar la imagen */
    .floating-elements {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        overflow: hidden;
        z-index: 1;
    }

    .floating-circle {
        position: absolute;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.08);
        border: none; /* Sin borde */
        animation: float 6s ease-in-out infinite;
    }

        .floating-circle:nth-child(1) {
            width: 80px;
            height: 80px;
            top: 20%;
            left: 10%;
            animation-delay: 0s;
        }

        .floating-circle:nth-child(2) {
            width: 120px;
            height: 120px;
            top: 60%;
            right: 10%;
            animation-delay: 2s;
        }

        .floating-circle:nth-child(3) {
            width: 60px;
            height: 60px;
            bottom: 20%;
            left: 20%;
            animation-delay: 4s;
        }
    }
</style>

<div class="modern-form-container">
    <div class="floating-elements">
        <div class="floating-circle"></div>
        <div class="floating-circle"></div>
        <div class="floating-circle"></div>
    </div>

    <div class="form-card">
        <div class="modern-form-header">
            <svg class="user-icon" version="1.0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">
                <g transform="translate(0,512) scale(0.1,-0.1)">
                    <path d="M4090 4778 c-33 -17 -51 -35 -67 -68 -21 -41 -23 -58 -23 -217 l0-173 -173 0 c-159 0 -176 -2 -217 -22 -48 -25 -90 -89 -90 -138 0 -49 42 -113 90 -137 41 -21 58 -23 217 -23 l173 0 0 -173 c0 -159 2 -176 23 -217 24 -48 88 -90 137 -90 49 0 113 42 138 90 20 41 22 58 22 217 l0 173 173 0 c159 0 176 2 217 23 48 24 90 88 90 137 0 49 -42 113 -90 138 -41 20 -58 22 -217 22 l-173 0 0 173 c0 159 -2 176 -22 217 -25 48 -89 90 -138 90 -14 0 -46 -10 -70 -22z" />
                    <path d="M2428 4150 c-260 -41 -487 -177 -638 -380 -66 -89 -134 -235 -162 -346 -31 -126 -31 -322 0 -448 87 -349 360 -621 708 -708 126 -31 323 -31 448 0 349 87 621 360 708 708 31 125 31 323 0 448 -54 216 -186 416 -362 546 -88 65 -234 134 -340 160 -97 23 -277 33 -362 20z m286 -330 c229 -58 408 -237 466 -466 87 -338 -124 -687 -466 -774 -338 -87 -687 124 -774 466 -86 336 123 685 462 774 97 25 214 25 312 0z" />
                    <path d="M1632 1909 c-284 -47 -531 -255 -623 -522 -41 -120 -49 -188 -49 -422 0 -227 10 -296 54 -384 34 -67 113 -149 182 -191 120 -72 54 -69 1359 -69 1268 -1 1234 -2 1344 53 69 35 150 113 193 187 61 103 71 169 65 452 -4 211 -7 252 -26 317 -90 308 -338 529 -651 579 -80 13 -1770 13 -1848 0z m1841 -324 c179 -46 320 -193 357 -369 7 -34 10 -135 8 -265 -3 -230 -5 -235 -72 -285 -27 -21 -31 -21 -1206 -21 -1175 0 -1179 0 -1206 21 -68 50 -69 55 -72 290 -4 300 17 374 142 500 73 72 127 104 219 129 80 21 1748 22 1830 0z" />
                </g>
            </svg>
            <div>
                <h1 class="modern-form-title">Guardar Usuario</h1>
                <p class="modern-form-subtitle">Crear nueva cuenta de usuario</p>
            </div>
        </div>

        @using (Html.BeginForm("Add", "User", FormMethod.Post, new { role = "form", @class = "modern-form" }))
        {
            <!-- Nombre y Edad en la misma fila -->
            <div class="name-age-row">
                <div class="modern-form-group">
                    @Html.LabelFor(d => d.Nombre, new { @class = "modern-form-label" })
                    @Html.TextBoxFor(d => d.Nombre, new { @class = "modern-form-input", placeholder = "Ingresa el nombre" })
                    @Html.ValidationMessageFor(d => d.Nombre, "", new { @class = "text-danger" })
                </div>

                <div class="modern-form-group">
                    @Html.LabelFor(d => d.Edad, new { @class = "modern-form-label" })
                    @Html.TextBoxFor(d => d.Edad, new { @class = "modern-form-input", placeholder = "Edad", type = "number", min = "13", max = "120" })
                    @Html.ValidationMessageFor(d => d.Edad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="modern-form-group">
                @Html.LabelFor(d => d.Usuario, new { @class = "modern-form-label" })
                @Html.TextBoxFor(d => d.Usuario, new { @class = "modern-form-input", placeholder = "@nombreusuario" })
                @Html.ValidationMessageFor(d => d.Usuario, "", new { @class = "text-danger" })
            </div>

            <div class="modern-form-group">
                @Html.LabelFor(d => d.Email, new { @class = "modern-form-label" })
                @Html.TextBoxFor(d => d.Email, new { @class = "modern-form-input", placeholder = "usuario@email.com", type = "email" })
                @Html.ValidationMessageFor(d => d.Email, "", new { @class = "text-danger" })
            </div>

            <div class="modern-form-row">
                <div class="modern-form-group">
                    @Html.LabelFor(d => d.Password, new { @class = "modern-form-label" })
                    <div class="password-container">
                        @Html.PasswordFor(d => d.Password, new { @class = "modern-form-input", placeholder = "••••••••", id = "password" })
                        <button type="button" class="password-toggle" onclick="togglePassword('password')">
                            <svg class="eye-closed" version="1.0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">
                                <g transform="translate(0,512) scale(0.1,-0.1)">
                                    <path d="M560 3548 c-48 -33 -72 -70 -77 -120 -6 -55 27 -126 114 -243 61 -82 230 -250 296 -295 l36 -25 -268 -270 c-232 -232 -271 -276 -280 -312 -36 -133 101 -248 222 -187 18 9 163 146 323 305 l290 290 102 -46 c117 -52 295 -112 430 -146 51 -13 91 -28 88 -34 -24 -64 -186 -703 -186 -736 0 -87 65 -149 155 -149 58 0 106 25 133 70 10 16 63 196 118 400 l99 371 110 -8 c124 -9 425 -10 589 -3 l110 5 101 -378 c107 -396 112 -409 177 -443 38 -20 107 -17 148 5 42 22 80 83 80 131 0 19 -43 194 -95 389 -53 195 -94 355 -93 356 2 1 37 10 78 20 119 29 305 91 433 146 l119 52 297 -296 c163 -162 306 -300 318 -306 30 -15 87 -14 127 3 68 28 108 115 87 189 -11 35 -55 85 -282 312 l-268 270 36 25 c66 45 235 213 296 295 87 117 120 188 114 243 -9 79 -77 142 -154 142 -76 0 -113 -29 -183 -146 -52 -88 -218 -249 -335 -326 -274 -182 -662 -313 -1060 -360 -161 -19 -569 -16 -728 5 -394 53 -755 178 -1022 355 -117 77 -283 238 -335 326 -70 117 -107 146 -183 146 -29 0 -55 -8 -77 -22z" />
                                </g>
                            </svg>
                        </button>
                    </div>
                    <div class="password-strength">
                        <span id="strengthText">Seguridad:</span>
                        <div class="strength-bar">
                            <div class="strength-fill" id="strengthBar"></div>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(d => d.Password, "", new { @class = "text-danger" })
                </div>

                <div class="modern-form-group">
                    @Html.LabelFor(d => d.ConfirmPassword, new { @class = "modern-form-label" })
                    <div class="password-container">
                        @Html.PasswordFor(d => d.ConfirmPassword, new { @class = "modern-form-input", placeholder = "••••••••", id = "confirmPassword" })
                        <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">
                            <svg class="eye-closed" version="1.0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">
                                <g transform="translate(0,512) scale(0.1,-0.1)">
                                    <path d="M560 3548 c-48 -33 -72 -70 -77 -120 -6 -55 27 -126 114 -243 61 -82 230 -250 296 -295 l36 -25 -268 -270 c-232 -232 -271 -276 -280 -312 -36 -133 101 -248 222 -187 18 9 163 146 323 305 l290 290 102 -46 c117 -52 295 -112 430 -146 51 -13 91 -28 88 -34 -24 -64 -186 -703 -186 -736 0 -87 65 -149 155 -149 58 0 106 25 133 70 10 16 63 196 118 400 l99 371 110 -8 c124 -9 425 -10 589 -3 l110 5 101 -378 c107 -396 112 -409 177 -443 38 -20 107 -17 148 5 42 22 80 83 80 131 0 19 -43 194 -95 389 -53 195 -94 355 -93 356 2 1 37 10 78 20 119 29 305 91 433 146 l119 52 297 -296 c163 -162 306 -300 318 -306 30 -15 87 -14 127 3 68 28 108 115 87 189 -11 35 -55 85 -282 312 l-268 270 36 25 c66 45 235 213 296 295 87 117 120 188 114 243 -9 79 -77 142 -154 142 -76 0 -113 -29 -183 -146 -52 -88 -218 -249 -335 -326 -274 -182 -662 -313 -1060 -360 -161 -19 -569 -16 -728 5 -394 53 -755 178 -1022 355 -117 77 -283 238 -335 326 -70 117 -107 146 -183 146 -29 0 -55 -8 -77 -22z" />
                                </g>
                            </svg>
                        </button>
                    </div>
                    @Html.ValidationMessageFor(d => d.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="buttons-container">
                <input type="button" value="← Volver Atrás" class="modern-back-btn" onclick="document.location.href='@Url.Content("~/User/Query")'" />
                <button type="submit" class="modern-submit-btn">
                    <svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" preserveAspectRatio="xMidYMid meet">
                        <g transform="translate(0,512) scale(0.1,-0.1)">
                            <path d="M159 5106 c-56 -20 -96 -53 -126 -104 l-28 -47 0 -2396 0 -2396 30 -49 c19 -30 49 -60 79 -79 l49 -30 2397 0 2397 0 49 30 c30 19 60 49 79 79 l30 49 3 1751 c2 1325 0 1762 -9 1794 -9 32 -136 209 -486 675 -261 348 -494 650 -518 673 -23 22 -61 46 -82 52 -61 18 -3813 16 -3864 -2z m771 -1208 c1 -603 4 -760 14 -791 22 -59 64 -107 120 -133 l51 -24 1135 0 1135 0 51 24 c28 13 64 40 79 59 55 74 55 66 55 874 l0 743 135 0 135 0 405 -540 405 -540 0 -1550 0 -1550 -230 0 -230 0 0 826 c0 599 -3 837 -12 865 -15 51 -69 114 -122 142 l-41 22 -1455 0 -1455 0 -41 -22 c-53 -28 -107 -91 -122 -142 -9 -28 -12 -266 -12 -865 l0 -826 -230 0 -230 0 0 2090 0 2090 230 0 230 0 0 -752z m2170 132 l0 -620 -850 0 -850 0 0 620 0 620 850 0 850 0 0 -620z m620 -2400 l0 -230 -1160 0 -1160 0 0 230 0 230 1160 0 1160 0 0 -230z m0 -930 l0 -230 -1160 0 -1160 0 0 230 0 230 1160 0 1160 0 0 -230z" />
                        </g>
                    </svg>
                    Guardar Usuario
                </button>
            </div>
        }
    </div>
</div>

<script>
    function togglePassword(inputId) {
        const input = document.getElementById(inputId);
        const button = input.nextElementSibling;
        const eyeIcon = button.querySelector('svg');

        if (input.type === 'password') {
            input.type = 'text';
            // Cambiar al SVG del ojo abierto
            eyeIcon.innerHTML = `
                <g transform="translate(0,512) scale(0.1,-0.1)">
                    <path d="M2274 4094 c-456 -55 -912 -230 -1349 -519 -390 -258 -760 -628 -884 -885 -49 -103 -49 -157 0 -260 135 -279 543 -675 968 -939 389 -241 795 -397 1191 -456 230 -35 551 -30 790 11 648 111 1357 510 1833 1032 187 205 292 378 292 482 0 176 -308 552 -708 863 -405 316 -870 536 -1337 636 -234 49 -561 64 -796 35z m536 -308 c248 -30 495 -99 740 -208 473 -209 965 -594 1198 -935 l56 -83 -56 -82 c-234 -344 -729 -730 -1208 -941 -700 -308 -1394 -287 -2095 65 -437 219 -862 566 -1073 875 l-56 83 56 83 c228 335 711 715 1173 924 249 113 537 194 785 222 119 13 355 12 480 -3z"/>
                    <path d="M2388 3475 c-351 -67 -634 -331 -730 -683 -31 -111 -31 -353 0 -464 90 -327 342 -580 667 -669 116 -32 354 -32 470 0 325 89 577 342 667 669 31 111 31 353 0 464 -90 328 -346 584 -667 669 -106 27 -300 34 -407 14z m67 -156 c79 -29 173 -119 211 -201 26 -56 29 -74 29 -163 0 -92 -3 -106 -32 -167 -40 -85 -106 -151 -191 -191 -61 -29 -76 -32 -162 -32 -86 0 -101 3 -162 32 -83 39 -154 108 -194 188 -27 55 -29 69 -29 170 0 102 2 114 30 169 95 187 303 269 500 195z"/>
                </g>
            `;
        } else {
            input.type = 'password';
            // Cambiar al SVG del ojo cerrado
            eyeIcon.innerHTML = `
                <g transform="translate(0,512) scale(0.1,-0.1)">
                    <path d="M560 3548 c-48 -33 -72 -70 -77 -120 -6 -55 27 -126 114 -243 61 -82 230 -250 296 -295 l36 -25 -268 -270 c-232 -232 -271 -276 -280 -312 -36 -133 101 -248 222 -187 18 9 163 146 323 305 l290 290 102 -46 c117 -52 295 -112 430 -146 51 -13 91 -28 88 -34 -24 -64 -186 -703 -186 -736 0 -87 65 -149 155 -149 58 0 106 25 133 70 10 16 63 196 118 400 l99 371 110 -8 c124 -9 425 -10 589 -3 l110 5 101 -378 c107 -396 112 -409 177 -443 38 -20 107 -17 148 5 42 22 80 83 80 131 0 19 -43 194 -95 389 -53 195 -94 355 -93 356 2 1 37 10 78 20 119 29 305 91 433 146 l119 52 297 -296 c163 -162 306 -300 318 -306 30 -15 87 -14 127 3 68 28 108 115 87 189 -11 35 -55 85 -282 312 l-268 270 36 25 c66 45 235 213 296 295 87 117 120 188 114 243 -9 79 -77 142 -154 142 -76 0 -113 -29 -183 -146 -52 -88 -218 -249 -335 -326 -274 -182 -662 -313 -1060 -360 -161 -19 -569 -16 -728 5 -394 53 -755 178 -1022 355 -117 77 -283 238 -335 326 -70 117 -107 146 -183 146 -29 0 -55 -8 -77 -22z"/>
                </g>
            `;
        }
    }

    function checkPasswordStrength(password) {
        let strength = 0;
        let text = 'Muy débil';
        let className = '';

        if (password.length >= 8) strength++;
        if (password.match(/[a-z]+/)) strength++;
        if (password.match(/[A-Z]+/)) strength++;
        if (password.match(/[0-9]+/)) strength++;
        if (password.match(/[$#&!]+/)) strength++;

        switch (strength) {
            case 0:
            case 1:
                text = 'Muy débil';
                className = 'strength-weak';
                break;
            case 2:
                text = 'Débil';
                className = 'strength-weak';
                break;
            case 3:
                text = 'Regular';
                className = 'strength-fair';
                break;
            case 4:
                text = 'Fuerte';
                className = 'strength-good';
                break;
            case 5:
                text = 'Muy fuerte';
                className = 'strength-strong';
                break;
        }

        return { text, className };
    }

    document.addEventListener('DOMContentLoaded', function () {
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');

        if (passwordInput) {
            passwordInput.addEventListener('input', function (e) {
                const password = e.target.value;
                const strength = checkPasswordStrength(password);
                const strengthBar = document.getElementById('strengthBar');
                const strengthText = document.getElementById('strengthText');

                if (strengthBar && strengthText) {
                    strengthBar.className = 'strength-fill ' + strength.className;
                    strengthText.textContent = 'Seguridad: ' + strength.text;
                }
            });
        }

        if (confirmPasswordInput) {
            confirmPasswordInput.addEventListener('input', function (e) {
                const password = passwordInput ? passwordInput.value : '';
                const confirmPassword = e.target.value;

                if (confirmPassword && password !== confirmPassword) {
                    e.target.style.borderColor = '#ef4444';
                } else if (confirmPassword) {
                    e.target.style.borderColor = '#10b981';
                }
            });
        }
    });
</script>